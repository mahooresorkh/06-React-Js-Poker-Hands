{"version":3,"sources":["audio/cardsSound.wav","images sync nonrecursive /.(png|jpe?g|svg)$","components/pokerCore/isStraightFlush.js","components/pokerCore/isStraight.js","images/101.png","images/102.png","images/103.png","images/104.png","images/111.png","images/112.png","images/113.png","images/114.png","images/121.png","images/122.png","images/123.png","images/124.png","images/131.png","images/132.png","images/133.png","images/134.png","images/141.png","images/142.png","images/143.png","images/144.png","images/21.png","images/22.png","images/23.png","images/24.png","images/31.png","images/32.png","images/33.png","images/34.png","images/41.png","images/42.png","images/43.png","images/44.png","images/51.png","images/52.png","images/53.png","images/54.png","images/61.png","images/62.png","images/63.png","images/64.png","images/71.png","images/72.png","images/73.png","images/74.png","images/81.png","images/82.png","images/83.png","images/84.png","images/91.png","images/92.png","images/93.png","images/94.png","images/gray_back.png","shuffle7/shuffleAndPick.js","components/modules/FiveCards.js","components/modules/Result.js","components/modules/Prob.js","components/modules/TwoCards.js","components/modules/Turns.js","components/pokerCore/isRoyalFlush.js","components/pokerCore/isFourOfAKind.js","components/pokerCore/isFullHouse.js","components/pokerCore/isFlush.js","components/pokerCore/isThreeOfAKind.js","components/pokerCore/isTwoPair.js","components/pokerCore/isOnePair.js","components/pokerCore/highCards.js","components/pokerCore/cardsProbability.js","components/pokerCore/detector.js","components/Board.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","isStraightFlush","shuffledCards","stringifiedShuffledCards","Array","cardSuits","forEach","val","index","toString","slice","length","sameSuitCards","i","sameSuitCardsTemp","suitsCounter","straightCards","firstCard","substr","push","j","secondCard","differece","eval","exceptionStraight","exceptionStraightCards","subindex","isStraight","shuffleAndPick","cards","temp","newindex","Math","floor","random","FiveCards","r","backImage","images","require","tableCardsImages","this","props","fiveLastCards","subval","indexOf","turns","fill","event","splice","boxshadows","fiveSelectedCards","style","backgroundImage","boxShadow","React","Component","Result","result","Prob","prob","TwoCards","firstUserCardImage","secondUserCardImage","hand","Turns","flop","type","key","onClick","eventListeners","flopClicked","fourth","fourthStreetClicked","fifth","fifthStreetClicked","buttons","isRoyalFlush","sameSuitCardsCounter","isFourOfAKind","fourOfAKindCards","firstSelectedCard","secondSelectedCard","thirdSelectedCard","fourthSelectedCard","isFullHouse","fullHouseCards","indexesForSplice","sort","a","b","isFlush","isThreeOfAKind","threeOfAKindCards","isTwoPair","twoPairCards","isOnePair","highCards","cardsProbability","cardsNumber","detector","handSituation","returnValues","Board","state","whatHappend","detectorOutPut","breakTime","setInterval","setState","clearInterval","audio","Audio","cardsSound","playbackRate","play","Game","height","window","innerHeight","width","innerWidth","ReactDOM","render","document","getElementById"],"mappings":"uGAAAA,EAAOC,QAAU,IAA0B,wC,iBCA3C,IAAIC,EAAM,CACT,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,kBAAmB,IAIpB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,G,uEC1EpB,IAAMU,gBAAkB,SAAlBA,gBAAmBC,eACrB,IAAIC,yBAA2B,IAAIC,MAC/BC,UAAY,IAAID,MACpBF,cAAcI,SAAQ,SAACC,EAAIC,GACvBL,yBAAyBK,GAASD,EAAIE,WACtCJ,UAAUG,GAASL,yBAAyBK,GAAOE,MAAMP,yBAAyBK,GAAOG,OAAO,EAC5FR,yBAAyBK,GAAOG,WAIxC,IADA,IAAIC,cAAgB,IAAIR,MATc,eAU7BS,GACL,IAAIC,EAAoB,IAAIV,MACxBW,EAAe,EAOnB,GANAV,UAAUC,SAAQ,SAACC,EAAIC,GAChBD,GAAMM,EAAEJ,aACPK,EAAkBC,GAAgBZ,yBAAyBK,GAC3DO,QAGLA,GAAc,EAEb,OADAH,cAAgBE,EAChB,SAXCD,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAAC,IAAD,WAApBA,GAAoB,kBAWrB,MAKR,GAAyB,GAAtBD,cAAcD,OACb,OAAO,KAGP,IAAK,IAAIE,GAAI,EAAGA,IAAKD,cAAcD,OAAO,EAAGE,KAAK,CAC9C,IAAIG,cAAgB,IAAIZ,MACpBa,UAAYL,cAAcC,IAAGK,OAAO,EAAEN,cAAcC,IAAGF,OAAO,GAClEK,cAAcG,KAAKP,cAAcC,KACjC,IAAI,IAAIO,EAAEP,GAAE,EAAGO,GAAKR,cAAcD,OAAO,EAAGS,IAAI,CAC5C,IAAIC,WAAaT,cAAcQ,GAAGF,OAAO,EAAEN,cAAcQ,GAAGT,OAAO,GAC/DW,UAAYC,KAAKN,WAAWM,KAAKF,YACrC,GAAGC,UAAYN,cAAcL,OACzB,MAKJ,GAHQW,WAAaN,cAAcL,QAC/BK,cAAcG,KAAKP,cAAcQ,IAEZ,GAAtBJ,cAAcL,OACb,OAAOK,eASnB,IAFA,IAAIQ,kBAAoB,CAAC,KAAK,IAAI,IAAI,IAAI,KACtCC,uBAAyB,GACrBjB,MAAQ,EAAGA,MAAQgB,kBAAkBb,OAAQH,QACjD,IAAK,IAAIkB,SAAW,EAAGA,SAAWd,cAAcD,OAAQe,WAAY,CAChE,GAAGF,kBAAkBhB,QAAQI,cAAcc,UAAUR,OAAO,EAAEN,cAAcc,UAAUf,OAAO,GAAG,CAC5Fc,uBAAuBN,KAAKP,cAAcc,WAC1C,MAEC,GAAGA,UAAUd,cAAcD,OAAO,EACnC,OAAO,KAOnB,OAAOc,wBAOAxB,uC,sEC1Ef,IAAM0B,WAAa,SAAbA,WAAczB,eAChB,IAAIC,yBAA2B,IAAIC,MACnCF,cAAcI,SAAQ,SAACC,EAAIC,GACvBL,yBAAyBK,GAASD,EAAIE,cAG1C,IAAK,IAAII,EAAI,EAAGA,GAAKV,yBAAyBQ,OAAO,EAAGE,IAAK,CACzD,IAAIG,cAAgB,IAAIZ,MACpBa,UAAYd,yBAAyBU,GAAGK,OAAO,EAAEf,yBAAyBU,GAAGF,OAAO,GACxFK,cAAcG,KAAKhB,yBAAyBU,IAC5C,IAAI,IAAIO,EAAEP,EAAE,EAAGO,GAAKjB,yBAAyBQ,OAAO,EAAGS,IAAI,CACvD,IAAIC,WAAalB,yBAAyBiB,GAAGF,OAAO,EAAEf,yBAAyBiB,GAAGT,OAAO,GACrFW,UAAYC,KAAKN,WAAWM,KAAKF,YACrC,GAAGC,UAAYN,cAAcL,OACzB,MAKJ,GAHQW,WAAaN,cAAcL,QAC/BK,cAAcG,KAAKhB,yBAAyBiB,IAEvB,GAAtBJ,cAAcL,OACb,OAAOK,eASnB,IAFA,IAAIQ,kBAAoB,CAAC,KAAK,IAAI,IAAI,IAAI,KACtCC,uBAAyB,GACrBjB,MAAQ,EAAGA,MAAQgB,kBAAkBb,OAAQH,QACjD,IAAK,IAAIkB,SAAW,EAAGA,SAAWvB,yBAAyBQ,OAAQe,WAAY,CAC3E,GAAGF,kBAAkBhB,QAAQL,yBAAyBuB,UAAUR,OAAO,EAAEf,yBAAyBuB,UAAUf,OAAO,GAAG,CAClHc,uBAAuBN,KAAKhB,yBAAyBuB,WACrD,MAEC,GAAGA,UAAUvB,yBAAyBQ,OAAO,EAC9C,OAAO,KAOnB,OAAOc,wBAMIE,kC,uECjDfzC,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,2GCe5ByC,G,MAfO,WAClB,IAAIC,EAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IACjD,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IACxC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IACxC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,KAS5C,OAPAA,EAAMvB,SAAQ,SAACC,EAAIC,GACnB,IACIsB,EADAC,EAAWC,KAAKC,MAAMD,KAAKE,SAASL,EAAMlB,QAE9CmB,EAAOD,EAAME,GACbF,EAAME,GAAYxB,EAClBsB,EAAMrB,GAASsB,KAERD,EAAMnB,MAAM,EARO,KC2EfyB,E,iLA7EF,IAAD,OAKF,IAHiBC,EAkBnBC,EAfQC,GAHWF,EAGQG,MAFdzC,OAAOV,IAAIgD,GAKpBI,EAAmB,GACvBC,KAAKC,MAAMC,cAAcrC,SAAQ,SAACC,EAAIC,GAErC8B,EAAOhC,SAAQ,SAACsC,IACwB,IAAlCA,EAAOC,QAAP,gBAAwBtC,MACvBiC,EAAiBhC,GAASoC,SAQtCN,EAAOhC,SAAQ,SAACC,IACyB,IAAlCA,EAAIsC,QAAQ,qBACXR,EAAY9B,MAKpB,IAAIuC,EAAQ1C,MAAM,GAAG2C,KAAKV,GAC1B,OAAQI,KAAKC,MAAMM,OAChB,IAAK,cACDF,EAAMG,OAAO,EAAE,EAAET,EAAiB,GAAGA,EAAiB,GAAGA,EAAiB,IAC1E,MACH,IAAK,sBACDM,EAAMG,OAAO,EAAE,EAAET,EAAiB,GAAGA,EAAiB,GAAGA,EAAiB,GAAGA,EAAiB,IAC9F,MACJ,IAAK,qBACDM,EAAQN,EAOZ,IAAIU,EAAa9C,MAAM,GAAG2C,KAAK,MAY/B,OAXGN,KAAKC,MAAMM,OACVP,KAAKC,MAAMC,cAAcrC,SAAQ,SAACC,EAAIC,GAClC,EAAKkC,MAAMS,kBAAkB7C,SAAQ,SAACsC,EAAOlB,GACtCnB,GAAKqC,IACJM,EAAW1C,GAAS,2BAQpC,yBAAKjB,GAAG,gBACJ,yBAAKA,GAAG,iBAAiB6D,MAAO,CAACC,gBAAgB,OAAD,OAAQP,EAAM,GAAd,KAC5CQ,UAAWJ,EAAW,MAE1B,yBAAK3D,GAAG,kBAAkB6D,MAAO,CAACC,gBAAgB,OAAD,OAAQP,EAAM,GAAd,KAC7CQ,UAAWJ,EAAW,MAE1B,yBAAK3D,GAAG,iBAAiB6D,MAAO,CAACC,gBAAgB,OAAD,OAAQP,EAAM,GAAd,KAC5CQ,UAAWJ,EAAW,MAE1B,yBAAK3D,GAAG,kBAAkB6D,MAAO,CAACC,gBAAgB,OAAD,OAAQP,EAAM,GAAd,KAC7CQ,UAAWJ,EAAW,MAE1B,yBAAK3D,GAAG,iBAAiB6D,MAAO,CAACC,gBAAgB,OAAD,OAAQP,EAAM,GAAd,KAC5CQ,UAAWJ,EAAW,W,GAxEdK,IAAMC,WCuBfC,E,iLARP,OAZGhB,KAAKC,MAAMgB,OACK,yBAAKnE,GAAG,aAAR,UAEM,2BAAIkD,KAAKC,MAAMgB,SAIxB,6BACI,6BACA,kC,GAZPH,IAAMC,WCqBZG,E,iLAPP,OAXGlB,KAAKC,MAAMkB,KACK,yBAAKrE,GAAG,WAAR,eAEK,6BACCkD,KAAKC,MAAMkB,MAIjB,yBAAKrE,GAAG,gB,GAXhBgE,IAAMC,WCsDVK,E,iLArDF,IAAD,OAKF,IAHiBzB,EAOf0B,EACAC,EALIzB,GAHWF,EAGQG,MAFdzC,OAAOV,IAAIgD,GAQvBE,EAAOhC,SAAQ,SAACC,IACoC,IAA9CA,EAAIsC,QAAJ,gBAAqB,EAAKH,MAAMsB,KAAK,OACpCF,EAAqBvD,MAG3B+B,EAAOhC,SAAQ,SAACC,IACmC,IAA9CA,EAAIsC,QAAJ,gBAAqB,EAAKH,MAAMsB,KAAK,OACpCD,EAAqBxD,MAK7B,IAAI2C,EAAa9C,MAAM,GAAG2C,KAAK,MAa/B,OAZGN,KAAKC,MAAMM,OACVP,KAAKC,MAAMsB,KAAK1D,SAAQ,SAACC,EAAIC,GACzB,EAAKkC,MAAMS,kBAAkB7C,SAAQ,SAACsC,EAAOlB,GACtCnB,GAAKqC,IACJM,EAAW1C,GAAS,2BAShC,yBAAKjB,GAAG,eAEJ,yBAAKA,GAAG,gBAAgB6D,MAAS,CAACC,gBAAgB,OAAD,OAASS,EAAT,KAC7CR,UAAWJ,EAAW,MAG1B,yBAAK3D,GAAG,iBAAiB6D,MAAS,CAACC,gBAAgB,OAAD,OAASU,EAAT,KAC9CT,UAAWJ,EAAW,W,GA9CnBK,IAAMC,WCgCdS,E,iLA9BF,IAAD,OACAC,EAAO,4BAAQ3E,GAAG,WAAW4E,KAAK,SAASC,IAAM,OACrDC,QAAW,kBAAI,EAAK3B,MAAM4B,eAAeC,gBAD9B,QAEPC,EAAS,4BAAQjF,GAAG,aAAa4E,KAAK,SAASC,IAAM,SACzDC,QAAW,kBAAI,EAAK3B,MAAM4B,eAAeG,wBAD5B,cAETC,EAAQ,4BAAQnF,GAAG,YAAY4E,KAAK,SAASC,IAAM,QACvDC,QAAW,kBAAI,EAAK3B,MAAM4B,eAAeK,uBAD7B,cAERC,EAAU,GACd,OAAQnC,KAAKC,MAAMM,OACf,IAAK,GACD4B,EAAQzD,KAAK+C,EAAKM,EAAOE,GACzB,MACJ,IAAK,cACDE,EAAQzD,KAAKqD,EAAOE,GACpB,MACJ,IAAK,sBACDE,EAAQzD,KAAKuD,GAKrB,OACA,yBAAKnF,GAAG,YACHqF,O,GAxBOrB,IAAMC,W,gBC0CXqB,EA5CM,SAAC3E,GAClB,IAAIC,EAA2B,IAAIC,MAC/BC,EAAY,IAAID,MACpBF,EAAcI,SAAQ,SAACC,EAAIC,GACvBL,EAAyBK,GAASD,EAAIE,WACtCJ,EAAUG,GAASL,EAAyBK,GAAOE,MAAMP,EAAyBK,GAAOG,OAAO,EAC5FR,EAAyBK,GAAOG,WAIxC,IADA,IAAIC,EAAgB,IAAIR,MATW,WAU1BS,GACL,IAAIC,EAAoB,IAAIV,MACxBW,EAAe,EAOnB,GANAV,EAAUC,SAAQ,SAACC,EAAIC,GAChBD,GAAMM,EAAEJ,aACPK,EAAkBC,GAAgBZ,EAAyBK,GAC3DO,QAGLA,GAAc,EAEb,OADAH,EAAgBE,EAChB,SAXCD,EAAI,EAAGA,GAAK,EAAGA,IAAK,gBAApBA,GAWD,MAKR,GAAyB,GAAtBD,EAAcD,OACb,OAAO,KAIP,IADA,IAAImE,EAAuB,EAClBtE,EAAQ,GAAIA,GAAS,GAAIA,IAAS,CAEvC,GAAGI,EAAckE,GAAsB5D,OAAO,EAAEN,EAAckE,GAAsBnE,OAAO,KAAOH,EAAMC,WACpG,OAAO,KAGXqE,IAEJ,OAAOlE,EAAcF,MAAM,EAAE,I,QCXtBqE,EA5BO,SAAC7E,GACnB,IAAIC,EAA2B,IAAIC,MACnCF,EAAcI,SAAQ,SAACC,EAAIC,GACvBL,EAAyBK,GAASD,EAAIE,cAG1C,IADA,IAAIuE,EAAmB,IAAI5E,MAClBI,EAAQ,EAAGA,EAAQL,EAAyBQ,OAAO,EAAGH,IAAS,CACpE,IAAIyE,EAAoB9E,EAAyBK,GAAOU,OAAO,EAAEf,EAAyBK,GAAOG,OAAO,GACpGuE,EAAqB/E,EAAyBK,EAAM,GAAGU,OAAO,EAAEf,EAAyBK,EAAM,GAAGG,OAAO,GACzGwE,EAAoBhF,EAAyBK,EAAM,GAAGU,OAAO,EAAEf,EAAyBK,EAAM,GAAGG,OAAO,GACxGyE,EAAqBjF,EAAyBK,EAAM,GAAGU,OAAO,EAAEf,EAAyBK,EAAM,GAAGG,OAAO,GAC7G,GAAGsE,GAAmBC,GAAqBD,GAAmBE,GAC7DF,GAAmBG,EAQhB,OAPAJ,EAAmB7E,EAAyBO,MAAMF,EAAMA,EAAM,GACpD,GAAPA,EACCwE,EAAiB/B,OAAO,EAAE,EAAE9C,EAAyB,IAGrD6E,EAAiB/B,OAAO,EAAE,EAAE9C,EAAyB,IAElD6E,EAIf,OAAO,MCoDIK,EA5EK,SAACnF,GACjB,IAAIC,EAA2B,IAAIC,MACnCF,EAAcI,SAAQ,SAACC,EAAIC,GACvBL,EAAyBK,GAASD,EAAIE,cAK1C,IAHA,IAAI6E,EAAiB,IAAIlF,MAGhBS,EAAI,EAAGA,EAAIV,EAAyBQ,OAAQE,IAAK,EAClD0E,EAAmB,IAAInF,OACVe,KAAKN,GAGtB,IAFA,IAAIoE,EAAoB9E,EAAyBU,GAAGK,OAAO,EAAEf,EAAyBU,GAAGF,OAAO,GAEvFS,EAAI,EAAGA,EAAIjB,EAAyBQ,OAAQS,IAAK,CACtD,GAAGP,GAAGO,EASN,GAJG6D,GAFsB9E,EAAyBiB,GAAGF,OAAO,EAAEf,EAAyBiB,GAAGT,OAAO,IAG7F4E,EAAiBpE,KAAKC,GAGE,GAAzBmE,EAAiB5E,OAAU,CAC1B2E,EAAenE,KAAKhB,EAAyBoF,EAAiB,IAC1DpF,EAAyBoF,EAAiB,IAC1CpF,EAAyBoF,EAAiB,KAC1CpF,EAAyB8C,OAAOsC,EAAiB,GAAG,GACpD,OAIZ,GAA4B,GAAzBA,EAAiB5E,OAChB,MAMR,IAAK,IAAIE,EAAI,EAAGA,EAAIV,EAAyBQ,OAAQE,IAAK,CACtD,IAAI0E,KAAmB,IAAInF,OACVe,KAAKN,GAClBoE,EAAoB9E,EAAyBU,GAAGK,OAAO,EAAEf,EAAyBU,GAAGF,OAAO,GAEhG,IAFA,IAESS,EAAI,EAAGA,EAAIjB,EAAyBQ,OAAQS,IAAK,CACtD,GAAGP,GAAGO,EASN,GAJG6D,GAFsB9E,EAAyBiB,GAAGF,OAAO,EAAEf,EAAyBiB,GAAGT,OAAO,IAG7F4E,EAAiBpE,KAAKC,GAGE,GAAzBmE,EAAiB5E,OAAU,CAC1B2E,EAAenE,KAAKhB,EAAyBoF,EAAiB,IAC1DpF,EAAyBoF,EAAiB,KAC9CD,EAAeE,MAAK,SAACC,EAAGC,GAAK,OAAOA,EAAED,KACtC,OAIR,GAA4B,GAAzBF,EAAiB5E,OAChB,MAKR,OAA0B,GAAvB2E,EAAe3E,OACP2E,EAGJ,MC1CIK,EA9BC,SAACzF,GACb,IAAIC,EAA2B,IAAIC,MAC/BC,EAAY,IAAID,MACpBF,EAAcI,SAAQ,SAACC,EAAIC,GACvBL,EAAyBK,GAASD,EAAIE,WACtCJ,EAAUG,GAASL,EAAyBK,GAAOE,MAAMP,EAAyBK,GAAOG,OAAO,EAC5FR,EAAyBK,GAAOG,WAGpB,IAAIP,MACxB,IADA,IAT8B,WAUrBS,GACL,IAAIC,EAAoB,IAAIV,MACxBW,EAAe,EAOnB,GANAV,EAAUC,SAAQ,SAACC,EAAIC,GAChBD,GAAMM,EAAEJ,aACPK,EAAkBC,GAAgBZ,EAAyBK,GAC3DO,QAGLA,GAAc,EAEb,MAAM,CAAN,EADgBD,EACKJ,MAAM,EAAE,KAX5BG,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAAC,IAAD,IAApBA,GAAoB,kCAgB7B,OAAO,M,QCQI+E,EAlCQ,SAAC1F,GACpB,IAAIC,EAA2B,IAAIC,MACnCF,EAAcI,SAAQ,SAACC,EAAIC,GACvBL,EAAyBK,GAASD,EAAIE,cAG1C,IADA,IAAIoF,EAAoB,IAAIzF,MACnBI,EAAQ,EAAGA,EAAQL,EAAyBQ,OAAO,EAAGH,IAAS,CACpE,IAAIyE,EAAoB9E,EAAyBK,GAAOU,OAAO,EAAEf,EAAyBK,GAAOG,OAAO,GACpGuE,EAAqB/E,EAAyBK,EAAM,GAAGU,OAAO,EAAEf,EAAyBK,EAAM,GAAGG,OAAO,GACzGwE,EAAoBhF,EAAyBK,EAAM,GAAGU,OAAO,EAAEf,EAAyBK,EAAM,GAAGG,OAAO,GAC5G,GAAGsE,GAAmBC,GAAsBD,GAAmBE,EAe3D,OAdAU,EAAoB1F,EAAyBO,MAAMF,EAAMA,EAAM,GACrD,GAAPA,GACCqF,EAAkB5C,OAAO,EAAE,EAAE9C,EAAyB,IACtD0F,EAAkB5C,OAAO,EAAE,EAAE9C,EAAyB,KAE3C,GAAPK,GACJqF,EAAkB5C,OAAO,EAAE,EAAE9C,EAAyB,IACtD0F,EAAkB5C,OAAO,EAAE,EAAE9C,EAAyB,MAItD0F,EAAkB5C,OAAO,EAAE,EAAE9C,EAAyB,IACtD0F,EAAkB5C,OAAO,EAAE,EAAE9C,EAAyB,KAEnD0F,EAIf,OAAO,MC4DIC,EAzFG,SAAC5F,GACf,IAAIC,EAA2B,IAAIC,MACnCF,EAAcI,SAAQ,SAACC,EAAIC,GACvBL,EAAyBK,GAASD,EAAIE,cAK1C,IAHA,IAAIsF,EAAe,IAAI3F,MAGdS,EAAI,EAAGA,EAAIV,EAAyBQ,OAAQE,IAAK,EAClD0E,EAAmB,IAAInF,OACVe,KAAKN,GAGtB,IAFA,IAAIoE,EAAoB9E,EAAyBU,GAAGK,OAAO,EAAEf,EAAyBU,GAAGF,OAAO,GAEvFS,EAAIP,EAAE,EAAGO,EAAIjB,EAAyBQ,OAAQS,IAAK,CAQxD,GAJG6D,GAFsB9E,EAAyBiB,GAAGF,OAAO,EAAEf,EAAyBiB,GAAGT,OAAO,IAG7F4E,EAAiBpE,KAAKC,GAGE,GAAzBmE,EAAiB5E,OAAU,CACA,GAAvB4E,EAAiB,IAChBQ,EAAa5E,KAAKhB,EAAyB,IAE/C4F,EAAa5E,KAAKhB,EAAyBoF,EAAiB,IACxDpF,EAAyBoF,EAAiB,KAC1CpF,EAAyB8C,OAAOsC,EAAiB,GAAG,GACpD,OAIZ,GAA4B,GAAzBA,EAAiB5E,OAChB,MAMR,IAAK,IAAIE,EAAI,EAAGA,EAAIV,EAAyBQ,OAAQE,IAAK,CACtD,IAAI0E,KAAmB,IAAInF,OACVe,KAAKN,GAClBoE,EAAoB9E,EAAyBU,GAAGK,OAAO,EAAEf,EAAyBU,GAAGF,OAAO,GAEhG,IAFA,IAESS,EAAIP,EAAE,EAAGO,EAAIjB,EAAyBQ,OAAQS,IAAK,CAQxD,GAJG6D,GAFsB9E,EAAyBiB,GAAGF,OAAO,EAAEf,EAAyBiB,GAAGT,OAAO,IAG7F4E,EAAiBpE,KAAKC,GAGE,GAAzBmE,EAAiB5E,OAAU,CACF,GAArBoF,EAAapF,OACZoF,EAAa5E,KAAKhB,EAAyBoF,EAAiB,IAC1DpF,EAAyBoF,EAAiB,KAIlB,GAAvBA,EAAiB,IAChBQ,EAAa5E,KAAKhB,EAAyB,IAC3C4F,EAAa5E,KAAKhB,EAAyBoF,EAAiB,IACxDpF,EAAyBoF,EAAiB,OAG9CQ,EAAa5E,KAAKhB,EAAyBoF,EAAiB,IACxDpF,EAAyBoF,EAAiB,KAC9CQ,EAAa5E,KAAKhB,EAAyB,KAInD,OAIR,GAA4B,GAAzBoF,EAAiB5E,OAChB,MAKR,OAAwB,GAArBoF,EAAapF,OACLoF,EAGJ,MClDIC,EAnCG,SAAC9F,GACf,IAAIC,EAA2B,IAAIC,MACnCF,EAAcI,SAAQ,SAACC,EAAIC,GACvBL,EAAyBK,GAASD,EAAIE,cAE1C,IAAIsF,EAAe,IAAI3F,MACvB2F,EAAa5E,KACThB,EAAyB,GACzBA,EAAyB,GACzBA,EAAyB,IAE7B,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAyBQ,OAAQE,IAGjD,IAFA,IAAIoE,EAAoB9E,EAAyBU,GAAGK,OAAO,EAAEf,EAAyBU,GAAGF,OAAO,GAEvFS,EAAIP,EAAE,EAAGO,EAAIjB,EAAyBQ,OAAQS,IAAK,CAIxD,GAAG6D,GAFsB9E,EAAyBiB,GAAGF,OAAO,EAAEf,EAAyBiB,GAAGT,OAAO,GAS7F,OANGS,EAAE,EACD2E,EAAa5E,KAAKhB,EAAyBU,GAAGV,EAAyBiB,IAGvE2E,EAAa5E,KAAKhB,EAAyB,GAAGA,EAAyB,IAEpE4F,EAMnB,OAAO,MCtBIE,EATG,SAAC/F,GACf,IAAIC,EAA2B,IAAIC,MAKnC,OAJAF,EAAcI,SAAQ,SAACC,EAAIC,GACvBL,EAAyBK,GAASD,EAAIE,cAGnCN,EAAyBO,MAAM,EAAE,ICuH7BwF,EA7HU,SAACxC,EAAOyC,GAC7B,OAAQzC,GACJ,IAAK,cACe,GAAbyC,EACCzC,EAAS,WAEQ,GAAbyC,EACJzC,EAAS,WAEQ,GAAbyC,IACJzC,EAAS,WAEb,MAEJ,IAAK,iBACe,GAAbyC,EACCzC,EAAS,WAEQ,GAAbyC,EACJzC,EAAS,WAEQ,GAAbyC,IACJzC,EAAS,WAEb,MAEJ,IAAK,iBACe,GAAbyC,EACCzC,EAAS,SAEQ,GAAbyC,EACJzC,EAAS,WAEQ,GAAbyC,IACJzC,EAAS,UAEb,MAEJ,IAAK,aACe,GAAbyC,EACCzC,EAAS,UAEQ,GAAbyC,EACJzC,EAAS,WAEQ,GAAbyC,IACJzC,EAAS,SAEb,MAEJ,IAAK,QACe,GAAbyC,EACCzC,EAAS,UAEQ,GAAbyC,EACJzC,EAAS,WAEQ,GAAbyC,IACJzC,EAAS,SAEb,MAEJ,IAAK,WACe,GAAbyC,EACCzC,EAAS,UAEQ,GAAbyC,EACJzC,EAAS,WAEQ,GAAbyC,IACJzC,EAAS,SAEb,MAEJ,IAAK,kBACe,GAAbyC,EACCzC,EAAS,UAEQ,GAAbyC,EACJzC,EAAS,WAEQ,GAAbyC,IACJzC,EAAS,SAEb,MAEJ,IAAK,WACe,GAAbyC,EACCzC,EAAS,UAEQ,GAAbyC,EACJzC,EAAS,YAEQ,GAAbyC,IACJzC,EAAS,SAEb,MAEJ,IAAK,WACe,GAAbyC,EACCzC,EAAS,WAEQ,GAAbyC,EACJzC,EAAS,YAEQ,GAAbyC,IACJzC,EAAS,SAEb,MAEJ,IAAK,YACe,GAAbyC,EACCzC,EAAS,WAEQ,GAAbyC,EACJzC,EAAS,YAEQ,GAAbyC,IACJzC,EAAS,SAIrB,OAAOA,GChBI0C,EA/FC,SAAClG,GACb,IAAImG,EAAgB,KAChBC,EAAe,CAAC5C,OAAQ,GACRP,kBAAmB,GACnBS,KAAM,IAG1B,OAFA1D,EAAcsF,MAAK,SAACC,EAAEC,GAAK,OAAOA,EAAED,MACpCY,EAAgBxB,EAAa3E,KAEzBoG,EAAa5C,OAAS,cACtB4C,EAAanD,kBAAqBkD,EAClCC,EAAa1C,KAAOsC,EAAiBI,EAAa5C,OAAOxD,EAAcS,QAChE2F,IAGXD,EAAgBpG,YAAgBC,KAE5BoG,EAAa5C,OAAS,iBACtB4C,EAAanD,kBAAqBkD,EAClCC,EAAa1C,KAAOsC,EAAiBI,EAAa5C,OAAOxD,EAAcS,QAChE2F,IAIXD,EAAgBtB,EAAc7E,KAE1BoG,EAAa5C,OAAS,iBACtB4C,EAAanD,kBAAqBkD,EAClCC,EAAa1C,KAAOsC,EAAiBI,EAAa5C,OAAOxD,EAAcS,QAChE2F,IAIXD,EAAgBhB,EAAYnF,KAExBoG,EAAa5C,OAAS,aACtB4C,EAAanD,kBAAqBkD,EAClCC,EAAa1C,KAAOsC,EAAiBI,EAAa5C,OAAOxD,EAAcS,QAChE2F,IAIXD,EAAgBV,EAAQzF,KAEpBoG,EAAa5C,OAAS,QACtB4C,EAAanD,kBAAqBkD,EAClCC,EAAa1C,KAAOsC,EAAiBI,EAAa5C,OAAOxD,EAAcS,QAChE2F,IAIXD,EAAgB1E,YAAWzB,KAEvBoG,EAAa5C,OAAS,WACtB4C,EAAanD,kBAAqBkD,EAClCC,EAAa1C,KAAOsC,EAAiBI,EAAa5C,OAAOxD,EAAcS,QAChE2F,IAKXD,EAAgBT,EAAe1F,KAE3BoG,EAAa5C,OAAS,kBACtB4C,EAAanD,kBAAqBkD,EAClCC,EAAa1C,KAAOsC,EAAiBI,EAAa5C,OAAOxD,EAAcS,QAChE2F,IAKXD,EAAgBP,EAAU5F,KAEtBoG,EAAa5C,OAAS,WACtB4C,EAAanD,kBAAqBkD,EAClCC,EAAa1C,KAAOsC,EAAiBI,EAAa5C,OAAOxD,EAAcS,QAChE2F,IAKXD,EAAgBL,EAAU9F,KAEtBoG,EAAa5C,OAAS,WACtB4C,EAAanD,kBAAqBkD,EAClCC,EAAa1C,KAAOsC,EAAiBI,EAAa5C,OAAOxD,EAAcS,QAChE2F,IAGXA,EAAa5C,OAAS,YAClB4C,EAAanD,kBAAqB8C,EAAU/F,GAC5CoG,EAAa1C,KAAOsC,EAAiBI,EAAa5C,OAAOxD,EAAcS,QAChE2F,ICtBAC,E,YAtEX,WAAY7D,GAAO,IAAD,8BACd,4CAAMA,KACD8D,MAAQ,CACT9C,OAAQ,GACRP,kBAAmB,GACnBS,KAAM,GACN6C,YAAa,IANH,E,2EAUJ,IAAD,OACLC,EAAiBN,EAAS3D,KAAKC,MAAMxC,cAAcQ,MAAM,EAAE,IAC3DiG,EAAYC,aAAY,WAAK,EAAKC,SAAS,CAACnD,OAAQgD,EAAehD,OACvBP,kBAAmBuD,EAAevD,kBAClCS,KAAM8C,EAAe9C,KACrB6C,YAAa,gBAEbK,cAAcH,KAC5B,KAE9BI,EAAQ,IAAIC,MAAMC,KACtBF,EAAMG,aAAe,IACrBH,EAAMI,S,4CAIY,IAAD,OACbT,EAAiBN,EAAS3D,KAAKC,MAAMxC,cAAcQ,MAAM,EAAE,IAC3DiG,EAAYC,aAAY,WAAK,EAAKC,SAAS,CAACnD,OAAQgD,EAAehD,OACvBP,kBAAmBuD,EAAevD,kBAClCS,KAAM8C,EAAe9C,KACrB6C,YAAa,wBAEbK,cAAcH,KAC5B,KAC9BI,EAAQ,IAAIC,MAAMC,KACtBF,EAAMG,aAAe,IACrBH,EAAMI,S,2CAGW,IAAD,OACZT,EAAiBN,EAAS3D,KAAKC,MAAMxC,cAAcQ,MAAM,EAAE,IAC3DiG,EAAYC,aAAY,WAAK,EAAKC,SAAS,CAACnD,OAAQgD,EAAehD,OACvBP,kBAAmBuD,EAAevD,kBAClCS,KAAM8C,EAAe9C,KACrB6C,YAAa,uBAEbK,cAAcH,KAC5B,KAC9BI,EAAQ,IAAIC,MAAMC,KACtBF,EAAMG,aAAe,IACrBH,EAAMI,S,+BAGD,IAAD,OACJ,OACI,yBAAK5H,GAAG,kBACJ,kBAAC,EAAD,CAAMqE,KAAQnB,KAAK+D,MAAM5C,OACzB,yBAAKrE,GAAG,mBACJ,kBAAC,EAAD,CAAW4D,kBAAqBV,KAAK+D,MAAMrD,kBAAmBR,cAAiBF,KAAKC,MAAMxC,cAAcQ,MAAM,EAAE,GAAIsC,MAASP,KAAK+D,MAAMC,cACxI,kBAAC,EAAD,CAAQ/C,OAAUjB,KAAK+D,MAAM9C,SAC7B,kBAAC,EAAD,CAAUM,KAAMvB,KAAKC,MAAMxC,cAAcQ,MAAM,EAAE,GAAIyC,kBAAqBV,KAAK+D,MAAMrD,kBAAmBH,MAASP,KAAK+D,MAAMC,eAEhI,kBAAC,EAAD,CAAOzD,MAASP,KAAK+D,MAAMC,YAAanC,eAAkB,CAAEC,YAAa,kBAAM,EAAKA,eACxBE,oBAAqB,kBAAM,EAAKA,uBAChCE,mBAAsB,kBAAM,EAAKA,8B,GAlEzFpB,IAAMC,WCDpB4D,E,YACF,WAAY1E,GAAO,IAAD,8BACd,4CAAMA,KACD8D,MAAQ,CAAC3E,MAAOD,KAFP,E,sEAOd,OAEA,yBAAKrC,GAAG,uBAAuB6D,MAAS,CAACiE,OAAQC,OAAOC,YAAaC,MAAOF,OAAOG,aAC/E,2CACA,6BACA,kBAAC,EAAD,CAAOvH,cAAiBuC,KAAK+D,MAAM3E,a,GAb5B0B,IAAMC,WAwBzBkE,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.c20d4390.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cardsSound.d27171c3.wav\";","var map = {\n\t\"./101.png\": 18,\n\t\"./102.png\": 19,\n\t\"./103.png\": 20,\n\t\"./104.png\": 21,\n\t\"./111.png\": 22,\n\t\"./112.png\": 23,\n\t\"./113.png\": 24,\n\t\"./114.png\": 25,\n\t\"./121.png\": 26,\n\t\"./122.png\": 27,\n\t\"./123.png\": 28,\n\t\"./124.png\": 29,\n\t\"./131.png\": 30,\n\t\"./132.png\": 31,\n\t\"./133.png\": 32,\n\t\"./134.png\": 33,\n\t\"./141.png\": 34,\n\t\"./142.png\": 35,\n\t\"./143.png\": 36,\n\t\"./144.png\": 37,\n\t\"./21.png\": 38,\n\t\"./22.png\": 39,\n\t\"./23.png\": 40,\n\t\"./24.png\": 41,\n\t\"./31.png\": 42,\n\t\"./32.png\": 43,\n\t\"./33.png\": 44,\n\t\"./34.png\": 45,\n\t\"./41.png\": 46,\n\t\"./42.png\": 47,\n\t\"./43.png\": 48,\n\t\"./44.png\": 49,\n\t\"./51.png\": 50,\n\t\"./52.png\": 51,\n\t\"./53.png\": 52,\n\t\"./54.png\": 53,\n\t\"./61.png\": 54,\n\t\"./62.png\": 55,\n\t\"./63.png\": 56,\n\t\"./64.png\": 57,\n\t\"./71.png\": 58,\n\t\"./72.png\": 59,\n\t\"./73.png\": 60,\n\t\"./74.png\": 61,\n\t\"./81.png\": 62,\n\t\"./82.png\": 63,\n\t\"./83.png\": 64,\n\t\"./84.png\": 65,\n\t\"./91.png\": 66,\n\t\"./92.png\": 67,\n\t\"./93.png\": 68,\n\t\"./94.png\": 69,\n\t\"./gray_back.png\": 70\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8;","const isStraightFlush = (shuffledCards) =>{\r\n    var stringifiedShuffledCards = new Array();\r\n    var cardSuits = new Array();\r\n    shuffledCards.forEach((val,index) => {\r\n        stringifiedShuffledCards[index] = val.toString();\r\n        cardSuits[index] = stringifiedShuffledCards[index].slice(stringifiedShuffledCards[index].length-1,\r\n            stringifiedShuffledCards[index].length);\r\n    });\r\n\r\n    var sameSuitCards = new Array();\r\n    for (let i = 1; i <= 4; i++) {\r\n        let sameSuitCardsTemp = new Array();\r\n        let suitsCounter = 0; \r\n        cardSuits.forEach((val,index) => {\r\n            if(val== i.toString()){\r\n                sameSuitCardsTemp[suitsCounter] = stringifiedShuffledCards[index];\r\n                suitsCounter++;\r\n            }\r\n        });\r\n        if(suitsCounter>=5){\r\n            sameSuitCards = sameSuitCardsTemp;\r\n            break;\r\n        }\r\n\r\n    }\r\n    \r\n    if(sameSuitCards.length==0){\r\n        return null;\r\n    }\r\n    else{\r\n        for (let i = 0; i <= sameSuitCards.length-5; i++) {\r\n            var straightCards = new Array();\r\n            var firstCard = sameSuitCards[i].substr(0,sameSuitCards[i].length-1);\r\n            straightCards.push(sameSuitCards[i]);\r\n            for(let j=i+1; j <= sameSuitCards.length-1; j++){\r\n                var secondCard = sameSuitCards[j].substr(0,sameSuitCards[j].length-1);\r\n                var differece = eval(firstCard)-eval(secondCard);\r\n                if(differece > straightCards.length){\r\n                    break;\r\n                }\r\n                else if(differece == straightCards.length){\r\n                    straightCards.push(sameSuitCards[j]);\r\n                }\r\n                if(straightCards.length==5){\r\n                    return straightCards;\r\n                }\r\n            }    \r\n               \r\n            \r\n        }\r\n    \r\n        var exceptionStraight = ['14','5','4','3','2'];\r\n        var exceptionStraightCards = [];\r\n        for(let index = 0; index < exceptionStraight.length; index++){    \r\n            for (let subindex = 0; subindex < sameSuitCards.length; subindex++) {\r\n                if(exceptionStraight[index]==sameSuitCards[subindex].substr(0,sameSuitCards[subindex].length-1)){\r\n                    exceptionStraightCards.push(sameSuitCards[subindex]);\r\n                    break;\r\n                }\r\n                else if(subindex==sameSuitCards.length-1){\r\n                    return null;\r\n                }\r\n    \r\n            }\r\n           \r\n        }\r\n        \r\n        return exceptionStraightCards;\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\nexport default isStraightFlush;","const isStraight = (shuffledCards) =>{\r\n    var stringifiedShuffledCards = new Array();\r\n    shuffledCards.forEach((val,index) => {\r\n        stringifiedShuffledCards[index] = val.toString();\r\n    });\r\n\r\n    for (let i = 0; i <= stringifiedShuffledCards.length-5; i++) {\r\n        var straightCards = new Array();\r\n        var firstCard = stringifiedShuffledCards[i].substr(0,stringifiedShuffledCards[i].length-1);\r\n        straightCards.push(stringifiedShuffledCards[i]);\r\n        for(let j=i+1; j <= stringifiedShuffledCards.length-1; j++){\r\n            var secondCard = stringifiedShuffledCards[j].substr(0,stringifiedShuffledCards[j].length-1);\r\n            var differece = eval(firstCard)-eval(secondCard);\r\n            if(differece > straightCards.length){\r\n                break;\r\n            }\r\n            else if(differece == straightCards.length){\r\n                straightCards.push(stringifiedShuffledCards[j]);\r\n            }\r\n            if(straightCards.length==5){\r\n                return straightCards;\r\n            }\r\n        }    \r\n           \r\n        \r\n    }\r\n\r\n    var exceptionStraight = ['14','5','4','3','2'];\r\n    var exceptionStraightCards = [];\r\n    for(let index = 0; index < exceptionStraight.length; index++){    \r\n        for (let subindex = 0; subindex < stringifiedShuffledCards.length; subindex++) {\r\n            if(exceptionStraight[index]==stringifiedShuffledCards[subindex].substr(0,stringifiedShuffledCards[subindex].length-1)){\r\n                exceptionStraightCards.push(stringifiedShuffledCards[subindex]);\r\n                break;\r\n            }\r\n            else if(subindex==stringifiedShuffledCards.length-1){\r\n                return null;\r\n            }\r\n\r\n        }\r\n       \r\n    }\r\n    \r\n    return exceptionStraightCards;\r\n\r\n    \r\n}\r\n\r\n\r\nexport default isStraight;","module.exports = __webpack_public_path__ + \"static/media/101.19635027.png\";","module.exports = __webpack_public_path__ + \"static/media/102.39ef422e.png\";","module.exports = __webpack_public_path__ + \"static/media/103.60ab387c.png\";","module.exports = __webpack_public_path__ + \"static/media/104.b208cd7f.png\";","module.exports = __webpack_public_path__ + \"static/media/111.1595a3ea.png\";","module.exports = __webpack_public_path__ + \"static/media/112.d5682eb4.png\";","module.exports = __webpack_public_path__ + \"static/media/113.fdf4ffc4.png\";","module.exports = __webpack_public_path__ + \"static/media/114.89d2c97e.png\";","module.exports = __webpack_public_path__ + \"static/media/121.d6296277.png\";","module.exports = __webpack_public_path__ + \"static/media/122.6940967d.png\";","module.exports = __webpack_public_path__ + \"static/media/123.63afa62b.png\";","module.exports = __webpack_public_path__ + \"static/media/124.9026849b.png\";","module.exports = __webpack_public_path__ + \"static/media/131.aa73cfd0.png\";","module.exports = __webpack_public_path__ + \"static/media/132.6b5b30c0.png\";","module.exports = __webpack_public_path__ + \"static/media/133.3b48ae82.png\";","module.exports = __webpack_public_path__ + \"static/media/134.e8d1a4cf.png\";","module.exports = __webpack_public_path__ + \"static/media/141.17ca9f77.png\";","module.exports = __webpack_public_path__ + \"static/media/142.f37d608f.png\";","module.exports = __webpack_public_path__ + \"static/media/143.a762540d.png\";","module.exports = __webpack_public_path__ + \"static/media/144.e6a6d2f8.png\";","module.exports = __webpack_public_path__ + \"static/media/21.136dab43.png\";","module.exports = __webpack_public_path__ + \"static/media/22.1451de5d.png\";","module.exports = __webpack_public_path__ + \"static/media/23.ebe43495.png\";","module.exports = __webpack_public_path__ + \"static/media/24.33c964ae.png\";","module.exports = __webpack_public_path__ + \"static/media/31.6ed5bf64.png\";","module.exports = __webpack_public_path__ + \"static/media/32.690d5a47.png\";","module.exports = __webpack_public_path__ + \"static/media/33.7278d51d.png\";","module.exports = __webpack_public_path__ + \"static/media/34.9638bf9f.png\";","module.exports = __webpack_public_path__ + \"static/media/41.23c51e0b.png\";","module.exports = __webpack_public_path__ + \"static/media/42.89eaac32.png\";","module.exports = __webpack_public_path__ + \"static/media/43.6695f1d5.png\";","module.exports = __webpack_public_path__ + \"static/media/44.5156259e.png\";","module.exports = __webpack_public_path__ + \"static/media/51.3ac88edd.png\";","module.exports = __webpack_public_path__ + \"static/media/52.24fd440c.png\";","module.exports = __webpack_public_path__ + \"static/media/53.5457f189.png\";","module.exports = __webpack_public_path__ + \"static/media/54.5ab3d862.png\";","module.exports = __webpack_public_path__ + \"static/media/61.5c96f40f.png\";","module.exports = __webpack_public_path__ + \"static/media/62.ff1c6299.png\";","module.exports = __webpack_public_path__ + \"static/media/63.84564e31.png\";","module.exports = __webpack_public_path__ + \"static/media/64.c99b0f04.png\";","module.exports = __webpack_public_path__ + \"static/media/71.4808cc41.png\";","module.exports = __webpack_public_path__ + \"static/media/72.58d872f0.png\";","module.exports = __webpack_public_path__ + \"static/media/73.c8475b53.png\";","module.exports = __webpack_public_path__ + \"static/media/74.82d62864.png\";","module.exports = __webpack_public_path__ + \"static/media/81.a46a54d9.png\";","module.exports = __webpack_public_path__ + \"static/media/82.fcafeaf2.png\";","module.exports = __webpack_public_path__ + \"static/media/83.1e9e59b0.png\";","module.exports = __webpack_public_path__ + \"static/media/84.497eed1e.png\";","module.exports = __webpack_public_path__ + \"static/media/91.4f8d0d8f.png\";","module.exports = __webpack_public_path__ + \"static/media/92.1d495bb1.png\";","module.exports = __webpack_public_path__ + \"static/media/93.33ab7891.png\";","module.exports = __webpack_public_path__ + \"static/media/94.50caac18.png\";","module.exports = __webpack_public_path__ + \"static/media/gray_back.db53954a.png\";","const shuffleAndPick =()=>{\r\n    var cards = [21,31,41,51,61,71,81,91,101,111,121,131,141,\r\n        22,32,42,52,62,72,82,92,102,112,122,132,142,\r\n        23,33,43,53,63,73,83,93,103,113,123,133,143,\r\n        24,34,44,54,64,74,84,94,104,114,124,134,144];                \r\n    var shuffledCardsNumber = 7;\r\n    cards.forEach((val,index) => {\r\n    var newindex = Math.floor(Math.random()*cards.length);\r\n    var temp;\r\n    temp = cards[newindex];\r\n    cards[newindex] = val;\r\n    cards[index] = temp;\r\n    });\r\n    return cards.slice(0,shuffledCardsNumber);\r\n}\r\nexport default shuffleAndPick;","import React from 'react';\r\n\r\nclass FiveCards extends React.Component{\r\n    render(){\r\n        //a webpack part for image folder import\r\n        function importAll(r) {\r\n            return r.keys().map(r);\r\n          }\r\n          const images = importAll(require.context('../../images', false, /\\.(png|jpe?g|svg)$/));\r\n        //end of webpack part\r\n\r\n        var tableCardsImages = [];\r\n        this.props.fiveLastCards.forEach((val,index) => {\r\n        \r\n         images.forEach((subval) => {\r\n            if(subval.indexOf(`media/${val}`)!==-1){\r\n                tableCardsImages[index] = subval;\r\n            }\r\n        });\r\n\r\n    });\r\n          \r\n    //for back image\r\n    var backImage;\r\n    images.forEach((val) => {\r\n        if(val.indexOf('media/gray_back')!==-1){\r\n            backImage = val;\r\n        }\r\n    });\r\n\r\n\r\n    var turns = Array(5).fill(backImage);\r\n    switch (this.props.event) {\r\n       case 'flopClicked':\r\n           turns.splice(0,3,tableCardsImages[0],tableCardsImages[1],tableCardsImages[2]);\r\n           break;\r\n        case 'fourthStreetClicked':\r\n            turns.splice(0,4,tableCardsImages[0],tableCardsImages[1],tableCardsImages[2],tableCardsImages[3]);\r\n            break;\r\n        case 'fifthStreetClicked':\r\n            turns = tableCardsImages;    \r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n\r\n        var boxshadows = Array(5).fill(null);\r\n        if(this.props.event){\r\n            this.props.fiveLastCards.forEach((val,index)=>{\r\n                this.props.fiveSelectedCards.forEach((subval,subindex)=>{\r\n                    if(val==subval){\r\n                        boxshadows[index] = '0px 0px 20px gold';\r\n                    }\r\n                });\r\n            });\r\n\r\n        }\r\n\r\n        return(\r\n        <div id=\"fiveCardsDiv\">\r\n            <div id=\"firstTableCard\" style={{backgroundImage:`url(${turns[0]})`,\r\n                boxShadow: boxshadows[0]\r\n                }}></div>\r\n            <div id=\"secondTableCard\" style={{backgroundImage:`url(${turns[1]})`,\r\n                boxShadow: boxshadows[1]\r\n                }}></div>\r\n            <div id=\"thirdTableCard\" style={{backgroundImage:`url(${turns[2]})`,\r\n                boxShadow: boxshadows[2]\r\n                }}></div>\r\n            <div id=\"fourthTableCard\" style={{backgroundImage:`url(${turns[3]})`,\r\n                boxShadow: boxshadows[3]\r\n                }}></div> \r\n            <div id=\"fifthTableCard\" style={{backgroundImage:`url(${turns[4]})`,\r\n                boxShadow: boxshadows[4]\r\n                }}></div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default FiveCards;","import React from 'react';\r\n\r\nclass Result extends React.Component{\r\n    render(){\r\n        var resultDiv = null;\r\n        if(this.props.result){\r\n               resultDiv = <div id=\"resultDiv\">\r\n                                 Result:   \r\n                                 <b>{this.props.result}</b>\r\n                              </div>;\r\n        }\r\n        else{\r\n            resultDiv = <div>\r\n                            <br></br>\r\n                            <br></br>\r\n                        </div>\r\n        }                  \r\n        return(\r\n            resultDiv\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Result;","import React from 'react';\r\n\r\nclass Prob extends React.Component{\r\n    render(){\r\n        var probability = null;\r\n        if(this.props.prob){\r\n            probability =  <div id=\"probDiv\">\r\n                                Probability:\r\n                                <br /> \r\n                                {this.props.prob}\r\n                            </div>;\r\n        }\r\n        else{\r\n            probability =  <div id=\"probDiv\">\r\n                           </div>;\r\n        }\r\n        return(\r\n            probability\r\n            );\r\n    }\r\n}\r\n\r\n\r\nexport default Prob;","import React from 'react';\r\nclass TwoCards extends React.Component{\r\n    \r\n    render(){\r\n        //a webpack part for image folder import\r\n        function importAll(r) {\r\n            return r.keys().map(r);\r\n          }\r\n          const images = importAll(require.context('../../images', false, /\\.(png|jpe?g|svg)$/));\r\n        //end of webpack part\r\n\r\n        //findig two related images indexes\r\n        var firstUserCardImage;\r\n        var secondUserCardImage;\r\n         images.forEach((val) => {\r\n            if(val.indexOf(`media/${this.props.hand[0]}`)!==-1){\r\n                firstUserCardImage = val;\r\n            }\r\n        });\r\n          images.forEach((val) => {\r\n            if(val.indexOf(`media/${this.props.hand[1]}`)!==-1){\r\n                secondUserCardImage= val;\r\n            }\r\n        });\r\n        // end of finding images indexes\r\n\r\n        var boxshadows = Array(2).fill(null);\r\n        if(this.props.event){\r\n            this.props.hand.forEach((val,index)=>{\r\n                this.props.fiveSelectedCards.forEach((subval,subindex)=>{\r\n                    if(val==subval){\r\n                        boxshadows[index] = '0px 0px 20px gold';\r\n                    }\r\n                });\r\n            });\r\n\r\n        }\r\n\r\n\r\n        return(\r\n            <div id=\"twoCardsDiv\">\r\n\r\n                <div id='firstUserCard' style = {{backgroundImage: `url(${firstUserCardImage})`,\r\n                    boxShadow: boxshadows[0]\r\n                    }}></div>\r\n\r\n                <div id='secondUserCard' style = {{backgroundImage: `url(${secondUserCardImage})`,\r\n                    boxShadow: boxshadows[1]\r\n                    }}></div>\r\n\r\n            </div>);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TwoCards;","import React from 'react';\r\n\r\nclass Turns extends React.Component{\r\n    render(){\r\n        var flop = <button id=\"flop-btn\" type=\"button\" key = 'flop'\r\n        onClick = {()=>this.props.eventListeners.flopClicked()}>Flop</button>;\r\n        var fourth = <button id=\"fourth-btn\" type=\"button\" key = 'fourth'\r\n        onClick = {()=>this.props.eventListeners.fourthStreetClicked()}>4th Street</button> ;\r\n        var fifth = <button id=\"fifth-btn\" type=\"button\" key = 'fifth'\r\n        onClick = {()=>this.props.eventListeners.fifthStreetClicked()}>5th Street</button>;\r\n        var buttons = [];\r\n        switch (this.props.event) {\r\n            case '' :\r\n                buttons.push(flop,fourth,fifth);\r\n                break;\r\n            case 'flopClicked':\r\n                buttons.push(fourth,fifth);\r\n                break;\r\n            case 'fourthStreetClicked':\r\n                buttons.push(fifth);\r\n                break;      \r\n            default:\r\n\r\n        }\r\n        return(\r\n        <div id=\"turnsDiv\">\r\n            {buttons}\r\n        </div>);\r\n    }\r\ns}\r\n\r\n\r\n\r\nexport default Turns;","const isRoyalFlush = (shuffledCards) =>{\r\n    var stringifiedShuffledCards = new Array();\r\n    var cardSuits = new Array();\r\n    shuffledCards.forEach((val,index) => {\r\n        stringifiedShuffledCards[index] = val.toString();\r\n        cardSuits[index] = stringifiedShuffledCards[index].slice(stringifiedShuffledCards[index].length-1,\r\n            stringifiedShuffledCards[index].length);\r\n    });\r\n\r\n    var sameSuitCards = new Array();\r\n    for (let i = 1; i <= 4; i++) {\r\n        let sameSuitCardsTemp = new Array();\r\n        let suitsCounter = 0; \r\n        cardSuits.forEach((val,index) => {\r\n            if(val== i.toString()){\r\n                sameSuitCardsTemp[suitsCounter] = stringifiedShuffledCards[index];\r\n                suitsCounter++;\r\n            }\r\n        });\r\n        if(suitsCounter>=5){\r\n            sameSuitCards = sameSuitCardsTemp;\r\n            break;\r\n        }\r\n\r\n    }\r\n    \r\n    if(sameSuitCards.length==0){\r\n        return null;\r\n    }\r\n    else{\r\n        var sameSuitCardsCounter = 0;\r\n        for (let index = 14; index >= 10; index--) {\r\n\r\n            if(sameSuitCards[sameSuitCardsCounter].substr(0,sameSuitCards[sameSuitCardsCounter].length-1) !== index.toString()){\r\n                return null;\r\n            }\r\n\r\n            sameSuitCardsCounter++;\r\n        }\r\n        return sameSuitCards.slice(0,5);\r\n    }\r\n\r\n}\r\n\r\nexport default isRoyalFlush;","const isFourOfAKind = (shuffledCards) =>{\r\n    var stringifiedShuffledCards = new Array();\r\n    shuffledCards.forEach((val,index) => {\r\n        stringifiedShuffledCards[index] = val.toString();\r\n    });\r\n    var fourOfAKindCards = new Array();\r\n    for (let index = 0; index < stringifiedShuffledCards.length-3; index++) {\r\n        var firstSelectedCard = stringifiedShuffledCards[index].substr(0,stringifiedShuffledCards[index].length-1);\r\n        var secondSelectedCard = stringifiedShuffledCards[index+1].substr(0,stringifiedShuffledCards[index+1].length-1);\r\n        var thirdSelectedCard = stringifiedShuffledCards[index+2].substr(0,stringifiedShuffledCards[index+2].length-1);\r\n        var fourthSelectedCard = stringifiedShuffledCards[index+3].substr(0,stringifiedShuffledCards[index+3].length-1);\r\n        if(firstSelectedCard==secondSelectedCard&& firstSelectedCard==thirdSelectedCard&&\r\n         firstSelectedCard==fourthSelectedCard){\r\n            fourOfAKindCards = stringifiedShuffledCards.slice(index,index+4);\r\n            if(index==0){\r\n                fourOfAKindCards.splice(4,0,stringifiedShuffledCards[4]);\r\n            } \r\n            else{\r\n                fourOfAKindCards.splice(0,0,stringifiedShuffledCards[0]);\r\n            }\r\n            return fourOfAKindCards;\r\n        }\r\n\r\n    }\r\n    return null;\r\n\r\n}\r\n\r\nexport default isFourOfAKind;","const isFullHouse = (shuffledCards) =>{\r\n    var stringifiedShuffledCards = new Array();\r\n    shuffledCards.forEach((val,index) => {\r\n        stringifiedShuffledCards[index] = val.toString();\r\n    });\r\n    var fullHouseCards = new Array();\r\n\r\n    //checking three equal value cards\r\n    for (let i = 0; i < stringifiedShuffledCards.length; i++) {\r\n        var indexesForSplice = new Array();\r\n        indexesForSplice.push(i);\r\n        var firstSelectedCard = stringifiedShuffledCards[i].substr(0,stringifiedShuffledCards[i].length-1);\r\n\r\n        for (let j = 0; j < stringifiedShuffledCards.length; j++) {\r\n            if(i==j){\r\n                continue;\r\n            }    \r\n            var secondSelectedCard = stringifiedShuffledCards[j].substr(0,stringifiedShuffledCards[j].length-1);\r\n\r\n            if(firstSelectedCard==secondSelectedCard){\r\n                indexesForSplice.push(j);\r\n            }\r\n            \r\n            if(indexesForSplice.length==3){\r\n                fullHouseCards.push(stringifiedShuffledCards[indexesForSplice[0]],\r\n                    stringifiedShuffledCards[indexesForSplice[1]],\r\n                    stringifiedShuffledCards[indexesForSplice[2]]);\r\n                    stringifiedShuffledCards.splice(indexesForSplice[0],3);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if(indexesForSplice.length==3){\r\n            break;\r\n        }\r\n         \r\n    }\r\n\r\n    //checking two equal value cards\r\n    for (let i = 0; i < stringifiedShuffledCards.length; i++) {\r\n        var indexesForSplice = new Array();\r\n        indexesForSplice.push(i);\r\n        var firstSelectedCard = stringifiedShuffledCards[i].substr(0,stringifiedShuffledCards[i].length-1);\r\n\r\n        for (let j = 0; j < stringifiedShuffledCards.length; j++) {\r\n            if(i==j){\r\n                continue;\r\n            }    \r\n            var secondSelectedCard = stringifiedShuffledCards[j].substr(0,stringifiedShuffledCards[j].length-1);\r\n\r\n            if(firstSelectedCard==secondSelectedCard){\r\n                indexesForSplice.push(j);\r\n            }\r\n            \r\n            if(indexesForSplice.length==2){\r\n                fullHouseCards.push(stringifiedShuffledCards[indexesForSplice[0]],\r\n                    stringifiedShuffledCards[indexesForSplice[1]]);\r\n                fullHouseCards.sort((a, b)=>{return b-a});    \r\n                break;\r\n            }\r\n        }\r\n         \r\n        if(indexesForSplice.length==2){\r\n            break;\r\n        }    \r\n        \r\n    }\r\n\r\n    if(fullHouseCards.length==5){\r\n        return fullHouseCards;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n\r\nexport default isFullHouse;","const isFlush = (shuffledCards) =>{\r\n    var stringifiedShuffledCards = new Array();\r\n    var cardSuits = new Array();\r\n    shuffledCards.forEach((val,index) => {\r\n        stringifiedShuffledCards[index] = val.toString();\r\n        cardSuits[index] = stringifiedShuffledCards[index].slice(stringifiedShuffledCards[index].length-1,\r\n            stringifiedShuffledCards[index].length);\r\n    });\r\n\r\n    var sameSuitCards = new Array();\r\n    for (let i = 1; i <= 4; i++) {\r\n        let sameSuitCardsTemp = new Array();\r\n        let suitsCounter = 0; \r\n        cardSuits.forEach((val,index) => {\r\n            if(val== i.toString()){\r\n                sameSuitCardsTemp[suitsCounter] = stringifiedShuffledCards[index];\r\n                suitsCounter++;\r\n            }\r\n        });\r\n        if(suitsCounter>=5){\r\n            sameSuitCards = sameSuitCardsTemp;\r\n            return sameSuitCards.slice(0,5);\r\n        }\r\n\r\n    }\r\n\r\n    return null;\r\n}    \r\n\r\n\r\nexport default isFlush;","const isThreeOfAKind = (shuffledCards) =>{\r\n    var stringifiedShuffledCards = new Array();\r\n    shuffledCards.forEach((val,index) => {\r\n        stringifiedShuffledCards[index] = val.toString();\r\n    });\r\n    var threeOfAKindCards = new Array();\r\n    for (let index = 0; index < stringifiedShuffledCards.length-2; index++) {\r\n        var firstSelectedCard = stringifiedShuffledCards[index].substr(0,stringifiedShuffledCards[index].length-1);\r\n        var secondSelectedCard = stringifiedShuffledCards[index+1].substr(0,stringifiedShuffledCards[index+1].length-1);\r\n        var thirdSelectedCard = stringifiedShuffledCards[index+2].substr(0,stringifiedShuffledCards[index+2].length-1);\r\n        if(firstSelectedCard==secondSelectedCard && firstSelectedCard==thirdSelectedCard){\r\n            threeOfAKindCards = stringifiedShuffledCards.slice(index,index+3);\r\n            if(index==0){\r\n                threeOfAKindCards.splice(3,0,stringifiedShuffledCards[3]);\r\n                threeOfAKindCards.splice(4,0,stringifiedShuffledCards[4]);\r\n            } \r\n            else if(index==1){\r\n                threeOfAKindCards.splice(0,0,stringifiedShuffledCards[0]);\r\n                threeOfAKindCards.splice(4,0,stringifiedShuffledCards[4]);\r\n            }\r\n\r\n            else{\r\n                threeOfAKindCards.splice(0,0,stringifiedShuffledCards[0]);\r\n                threeOfAKindCards.splice(1,0,stringifiedShuffledCards[1]);\r\n            }\r\n            return threeOfAKindCards;\r\n        }\r\n\r\n    }\r\n    return null;\r\n\r\n}\r\n\r\n\r\nexport default isThreeOfAKind;","const isTwoPair = (shuffledCards) =>{\r\n    var stringifiedShuffledCards = new Array();\r\n    shuffledCards.forEach((val,index) => {\r\n        stringifiedShuffledCards[index] = val.toString();\r\n    });\r\n    var twoPairCards = new Array();\r\n\r\n    //checking first pair cards\r\n    for (let i = 0; i < stringifiedShuffledCards.length; i++) {\r\n        var indexesForSplice = new Array();\r\n        indexesForSplice.push(i);\r\n        var firstSelectedCard = stringifiedShuffledCards[i].substr(0,stringifiedShuffledCards[i].length-1);\r\n\r\n        for (let j = i+1; j < stringifiedShuffledCards.length; j++) {\r\n\r\n            var secondSelectedCard = stringifiedShuffledCards[j].substr(0,stringifiedShuffledCards[j].length-1);\r\n\r\n            if(firstSelectedCard==secondSelectedCard){\r\n                indexesForSplice.push(j);\r\n            }\r\n            \r\n            if(indexesForSplice.length==2){\r\n                if(indexesForSplice[0] != 0){\r\n                    twoPairCards.push(stringifiedShuffledCards[0]);\r\n                }\r\n                twoPairCards.push(stringifiedShuffledCards[indexesForSplice[0]],\r\n                    stringifiedShuffledCards[indexesForSplice[1]]);\r\n                    stringifiedShuffledCards.splice(indexesForSplice[0],2);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if(indexesForSplice.length==2){\r\n            break;\r\n        }\r\n         \r\n    }\r\n\r\n    //checking second pair cards\r\n    for (let i = 0; i < stringifiedShuffledCards.length; i++) {\r\n        var indexesForSplice = new Array();\r\n        indexesForSplice.push(i);\r\n        var firstSelectedCard = stringifiedShuffledCards[i].substr(0,stringifiedShuffledCards[i].length-1);\r\n\r\n        for (let j = i+1; j < stringifiedShuffledCards.length; j++) {\r\n            \r\n            var secondSelectedCard = stringifiedShuffledCards[j].substr(0,stringifiedShuffledCards[j].length-1);\r\n\r\n            if(firstSelectedCard==secondSelectedCard){\r\n                indexesForSplice.push(j);\r\n            }\r\n            \r\n            if(indexesForSplice.length==2){\r\n                if(twoPairCards.length==3){\r\n                    twoPairCards.push(stringifiedShuffledCards[indexesForSplice[0]],\r\n                      stringifiedShuffledCards[indexesForSplice[1]]);    \r\n                    \r\n                }\r\n                else{\r\n                    if(indexesForSplice[0] != 0){\r\n                        twoPairCards.push(stringifiedShuffledCards[0]);\r\n                        twoPairCards.push(stringifiedShuffledCards[indexesForSplice[0]],\r\n                            stringifiedShuffledCards[indexesForSplice[1]]);  \r\n                    }\r\n                    else{\r\n                        twoPairCards.push(stringifiedShuffledCards[indexesForSplice[0]],\r\n                            stringifiedShuffledCards[indexesForSplice[1]]);\r\n                        twoPairCards.push(stringifiedShuffledCards[2]);      \r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n         \r\n        if(indexesForSplice.length==2){\r\n            break;\r\n        }    \r\n        \r\n    }\r\n\r\n    if(twoPairCards.length==5){\r\n        return twoPairCards;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n\r\nexport default isTwoPair;","const isOnePair = (shuffledCards) =>{\r\n    var stringifiedShuffledCards = new Array();\r\n    shuffledCards.forEach((val,index) => {\r\n        stringifiedShuffledCards[index] = val.toString();\r\n    });\r\n    var twoPairCards = new Array();\r\n    twoPairCards.push(\r\n        stringifiedShuffledCards[0],\r\n        stringifiedShuffledCards[1],\r\n        stringifiedShuffledCards[2]);\r\n    //checking first pair cards\r\n    for (let i = 0; i < stringifiedShuffledCards.length; i++) {\r\n        var firstSelectedCard = stringifiedShuffledCards[i].substr(0,stringifiedShuffledCards[i].length-1);\r\n\r\n        for (let j = i+1; j < stringifiedShuffledCards.length; j++) {\r\n\r\n            var secondSelectedCard = stringifiedShuffledCards[j].substr(0,stringifiedShuffledCards[j].length-1);\r\n\r\n            if(firstSelectedCard==secondSelectedCard){\r\n                if(j>4){\r\n                    twoPairCards.push(stringifiedShuffledCards[i],stringifiedShuffledCards[j]);\r\n                }\r\n                else{\r\n                    twoPairCards.push(stringifiedShuffledCards[3],stringifiedShuffledCards[4]);\r\n                }\r\n                return twoPairCards; \r\n            }    \r\n        }\r\n         \r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n\r\nexport default isOnePair;","const highCards = (shuffledCards) =>{\r\n    var stringifiedShuffledCards = new Array();\r\n    shuffledCards.forEach((val,index) => {\r\n        stringifiedShuffledCards[index] = val.toString();\r\n    });\r\n\r\n    return stringifiedShuffledCards.slice(0,5);\r\n}\r\n\r\nexport default highCards;","const cardsProbability = (result,cardsNumber) =>{\r\n    switch (result) {\r\n        case 'Royal Flush':\r\n            if(cardsNumber==5){\r\n                result = '0.00015%';\r\n            }\r\n            else if(cardsNumber==6){\r\n                result = '0.00092%';\r\n            }\r\n            else if(cardsNumber==7){\r\n                result = '0.0032%';\r\n            }\r\n            break;\r\n\r\n        case 'Straight Flush':\r\n            if(cardsNumber==5){\r\n                result = '0.00139%';\r\n            }\r\n            else if(cardsNumber==6){\r\n                result = '0.00813%';\r\n            }\r\n            else if(cardsNumber==7){\r\n                result = '0.0279%';\r\n            }\r\n            break;\r\n\r\n        case 'Four Of A Kind':\r\n            if(cardsNumber==5){\r\n                result = '0.024%';\r\n            }\r\n            else if(cardsNumber==6){\r\n                result = '0.07203%';\r\n            }\r\n            else if(cardsNumber==7){\r\n                result = '0.168%';\r\n            }\r\n            break;\r\n\r\n        case 'Full House':\r\n            if(cardsNumber==5){\r\n                result = '0.1441%';\r\n            }\r\n            else if(cardsNumber==6){\r\n                result = '0.81531%';\r\n            }\r\n            else if(cardsNumber==7){\r\n                result = '2.60%';\r\n            }\r\n            break;\r\n            \r\n        case 'Flush':\r\n            if(cardsNumber==5){\r\n                result = '0.1965%';\r\n            }\r\n            else if(cardsNumber==6){\r\n                result = '1.01084%';\r\n            }\r\n            else if(cardsNumber==7){\r\n                result = '3.03%';\r\n            }\r\n            break;\r\n\r\n        case 'Straight':\r\n            if(cardsNumber==5){\r\n                result = '0.3925%';\r\n            }\r\n            else if(cardsNumber==6){\r\n                result = '1.77626%';\r\n            }\r\n            else if(cardsNumber==7){\r\n                result = '4.62%';\r\n            }\r\n            break;\r\n\r\n        case 'Three Of A Kind':\r\n            if(cardsNumber==5){\r\n                result = '2.1128%';\r\n            }\r\n            else if(cardsNumber==6){\r\n                result = '3.59633%';\r\n            }\r\n            else if(cardsNumber==7){\r\n                result = '4.83%';\r\n            }\r\n            break;\r\n\r\n        case 'Two Pair':\r\n            if(cardsNumber==5){\r\n                result = '4.7539%';\r\n            }\r\n            else if(cardsNumber==6){\r\n                result = '12.44106%';\r\n            }\r\n            else if(cardsNumber==7){\r\n                result = '23.5%';\r\n            }\r\n            break;\r\n\r\n        case 'One Pair':\r\n            if(cardsNumber==5){\r\n                result = '42.2569%';\r\n            }\r\n            else if(cardsNumber==6){\r\n                result = '47.79689%';\r\n            }\r\n            else if(cardsNumber==7){\r\n                result = '43.8%';\r\n            }\r\n            break;\r\n\r\n        case 'High Card':\r\n            if(cardsNumber==5){\r\n                result = '50.1177%';\r\n            }\r\n            else if(cardsNumber==6){\r\n                result = '32.48214%';\r\n            }\r\n            else if(cardsNumber==7){\r\n                result = '17.4%';\r\n            }\r\n            break;      \r\n    }\r\n    return result;\r\n}\r\n\r\nexport default cardsProbability;","import isRoyalFlush from './isRoyalFlush.js';\r\nimport isStraightFlush from './isStraightFlush.js';\r\nimport isFourOfAKind from './isFourOfAKind.js';\r\nimport isFullHouse from './isFullHouse.js';\r\nimport isFlush from './isFlush.js';\r\nimport isStraight from './isStraight.js';\r\nimport isThreeOfAKind from './isThreeOfAKind.js';\r\nimport isTwoPair from './isTwoPair.js';\r\nimport isOnePair from './isOnePair.js';\r\nimport highCards from './highCards.js';\r\nimport cardsProbability from './cardsProbability'\r\nconst detector =(shuffledCards)=>{\r\n    var handSituation = null;\r\n    var returnValues = {result: '',\r\n                        fiveSelectedCards: '',\r\n                        prob: ''};\r\n    shuffledCards.sort((a,b)=>{return b-a});\r\n    handSituation = isRoyalFlush(shuffledCards);\r\n    if(handSituation){\r\n        returnValues.result = 'Royal Flush';\r\n        returnValues.fiveSelectedCards =  handSituation;\r\n        returnValues.prob = cardsProbability(returnValues.result,shuffledCards.length);\r\n        return returnValues;\r\n    }\r\n\r\n    handSituation = isStraightFlush(shuffledCards);\r\n    if(handSituation){\r\n        returnValues.result = 'Straight Flush';\r\n        returnValues.fiveSelectedCards =  handSituation;\r\n        returnValues.prob = cardsProbability(returnValues.result,shuffledCards.length);\r\n        return returnValues;\r\n    }\r\n\r\n\r\n    handSituation = isFourOfAKind(shuffledCards);\r\n    if(handSituation){\r\n        returnValues.result = 'Four Of A Kind';\r\n        returnValues.fiveSelectedCards =  handSituation;\r\n        returnValues.prob = cardsProbability(returnValues.result,shuffledCards.length);\r\n        return returnValues;\r\n    }\r\n\r\n    \r\n    handSituation = isFullHouse(shuffledCards);\r\n    if(handSituation){\r\n        returnValues.result = 'Full House';\r\n        returnValues.fiveSelectedCards =  handSituation;\r\n        returnValues.prob = cardsProbability(returnValues.result,shuffledCards.length);\r\n        return returnValues;\r\n    }\r\n\r\n\r\n    handSituation = isFlush(shuffledCards);\r\n    if(handSituation){\r\n        returnValues.result = 'Flush';\r\n        returnValues.fiveSelectedCards =  handSituation;\r\n        returnValues.prob = cardsProbability(returnValues.result,shuffledCards.length);\r\n        return returnValues;\r\n    }\r\n\r\n\r\n    handSituation = isStraight(shuffledCards);\r\n    if(handSituation){\r\n        returnValues.result = 'Straight';\r\n        returnValues.fiveSelectedCards =  handSituation;\r\n        returnValues.prob = cardsProbability(returnValues.result,shuffledCards.length);\r\n        return returnValues;\r\n    }\r\n\r\n    \r\n\r\n    handSituation = isThreeOfAKind(shuffledCards);\r\n    if(handSituation){\r\n        returnValues.result = 'Three Of A Kind';\r\n        returnValues.fiveSelectedCards =  handSituation;\r\n        returnValues.prob = cardsProbability(returnValues.result,shuffledCards.length);\r\n        return returnValues;\r\n    }\r\n\r\n    \r\n    \r\n    handSituation = isTwoPair(shuffledCards);\r\n    if(handSituation){\r\n        returnValues.result = 'Two Pair';\r\n        returnValues.fiveSelectedCards =  handSituation;\r\n        returnValues.prob = cardsProbability(returnValues.result,shuffledCards.length);\r\n        return returnValues;\r\n    }\r\n\r\n    \r\n\r\n    handSituation = isOnePair(shuffledCards);\r\n    if(handSituation){\r\n        returnValues.result = 'One Pair';\r\n        returnValues.fiveSelectedCards =  handSituation;\r\n        returnValues.prob = cardsProbability(returnValues.result,shuffledCards.length);\r\n        return returnValues;\r\n    }\r\n\r\n    returnValues.result = 'High Card';\r\n        returnValues.fiveSelectedCards =  highCards(shuffledCards);\r\n        returnValues.prob = cardsProbability(returnValues.result,shuffledCards.length);\r\n        return returnValues;\r\n    \r\n    \r\n}\r\nexport default detector;","import React from 'react';\r\nimport FiveCards from './modules/FiveCards';\r\nimport Result from './modules/Result';\r\nimport Prob from './modules/Prob';\r\nimport TwoCards from './modules/TwoCards';\r\nimport Turns from './modules/Turns';\r\nimport cardsSound from '../audio/cardsSound.wav';\r\nimport detector from './pokerCore/detector.js';\r\n\r\nclass Board extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            result: '',\r\n            fiveSelectedCards: '',\r\n            prob: '',\r\n            whatHappend: ''\r\n        }\r\n    }\r\n    \r\n    flopClicked(){\r\n        var detectorOutPut = detector(this.props.shuffledCards.slice(0,5));\r\n        var breakTime = setInterval(()=>{this.setState({result: detectorOutPut.result,\r\n                                                        fiveSelectedCards: detectorOutPut.fiveSelectedCards,\r\n                                                        prob: detectorOutPut.prob,\r\n                                                        whatHappend: 'flopClicked'\r\n                                                        });\r\n                                                        clearInterval(breakTime);\r\n                                        },100);\r\n\r\n        var audio = new Audio(cardsSound);\r\n        audio.playbackRate = 1.8;\r\n        audio.play();\r\n        \r\n    }\r\n\r\n    fourthStreetClicked(){\r\n        var detectorOutPut = detector(this.props.shuffledCards.slice(0,6));\r\n        var breakTime = setInterval(()=>{this.setState({result: detectorOutPut.result,\r\n                                                        fiveSelectedCards: detectorOutPut.fiveSelectedCards,\r\n                                                        prob: detectorOutPut.prob,\r\n                                                        whatHappend: 'fourthStreetClicked'\r\n                                                        });\r\n                                                        clearInterval(breakTime);\r\n                                        },100);\r\n        var audio = new Audio(cardsSound);\r\n        audio.playbackRate = 1.8;\r\n        audio.play();\r\n    }\r\n    \r\n    fifthStreetClicked(){\r\n        var detectorOutPut = detector(this.props.shuffledCards.slice(0,7));\r\n        var breakTime = setInterval(()=>{this.setState({result: detectorOutPut.result,\r\n                                                        fiveSelectedCards: detectorOutPut.fiveSelectedCards,\r\n                                                        prob: detectorOutPut.prob,\r\n                                                        whatHappend: 'fifthStreetClicked'\r\n                                                        });\r\n                                                        clearInterval(breakTime);\r\n                                        },100);        \r\n        var audio = new Audio(cardsSound);\r\n        audio.playbackRate = 1.8;\r\n        audio.play();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"main-container\">\r\n                <Prob prob = {this.state.prob}/>\r\n                <div id=\"cards-container\">  \r\n                    <FiveCards fiveSelectedCards = {this.state.fiveSelectedCards} fiveLastCards = {this.props.shuffledCards.slice(2,7)} event = {this.state.whatHappend}/>\r\n                    <Result result = {this.state.result} />\r\n                    <TwoCards hand={this.props.shuffledCards.slice(0,2)} fiveSelectedCards = {this.state.fiveSelectedCards} event = {this.state.whatHappend}/>\r\n                </div>      \r\n                <Turns event = {this.state.whatHappend} eventListeners = {{ flopClicked :() => this.flopClicked(),\r\n                                                                            fourthStreetClicked :() => this.fourthStreetClicked(),\r\n                                                                            fifthStreetClicked :  () => this.fifthStreetClicked()}} />\r\n            </div>\r\n        ); \r\n    }\r\n}\r\nexport default Board;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/style.css';\r\nimport shuffleAndPick from './shuffle7/shuffleAndPick.js';\r\nimport Board from './components/Board';\r\n\r\n\r\n\r\nclass Game extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {cards: shuffleAndPick()};\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            \r\n        <div id='background-container' style = {{height: window.innerHeight, width: window.innerWidth}}>\r\n            <h1>Poker Hands</h1>\r\n            <br />\r\n            <Board shuffledCards = {this.state.cards}/>\r\n        </div>\r\n            );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//****************Igniter section ********************/\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  "],"sourceRoot":""}